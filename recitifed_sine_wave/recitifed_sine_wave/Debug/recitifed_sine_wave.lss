
recitifed_sine_wave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000070a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000696  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  00800100  00800100  0000070a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000070a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000073c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000077c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000019b  00000000  00000000  000007b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000ef  00000000  00000000  0000094f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000176  00000000  00000000  00000a3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b0  00000000  00000000  00000bb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001bb  00000000  00000000  00000c64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000114  00000000  00000000  00000e1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00000f33  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__vector_11>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 c2 00 	jmp	0x184	; 0x184 <__vector_14>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	05 a8       	ldd	r0, Z+53	; 0x35
  6a:	4c cd       	rjmp	.-1384   	; 0xfffffb04 <__eeprom_end+0xff7efb04>
  6c:	b2 d4       	rcall	.+2404   	; 0x9d2 <__stack+0xd3>
  6e:	4e b9       	out	0x0e, r20	; 14
  70:	38 36       	cpi	r19, 0x68	; 104
  72:	a9 02       	muls	r26, r25
  74:	0c 50       	subi	r16, 0x0C	; 12
  76:	b9 91       	ld	r27, Y+
  78:	86 88       	ldd	r8, Z+22	; 0x16
  7a:	08 3c       	cpi	r16, 0xC8	; 200
  7c:	a6 aa       	std	Z+54, r10	; 0x36
  7e:	aa 2a       	or	r10, r26
  80:	be 00       	.word	0x00be	; ????
  82:	00 00       	nop
  84:	80 3f       	cpi	r24, 0xF0	; 240

00000086 <__ctors_end>:
  86:	11 24       	eor	r1, r1
  88:	1f be       	out	0x3f, r1	; 63
  8a:	cf ef       	ldi	r28, 0xFF	; 255
  8c:	d8 e0       	ldi	r29, 0x08	; 8
  8e:	de bf       	out	0x3e, r29	; 62
  90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	af 30       	cpi	r26, 0x0F	; 15
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 25 01 	call	0x24a	; 0x24a <main>
  a6:	0c 94 49 03 	jmp	0x692	; 0x692 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <initialize_all>:

// All initializations
void initialize_all(void)
{
	// Setting up pins as output
	DDRB |= (1<<DDB2);		// PB2 (OC1B)
  ae:	22 9a       	sbi	0x04, 2	; 4
	a = 0;
  b0:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <a>
  b4:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <a+0x1>
  b8:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <a+0x2>
  bc:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <a+0x3>
	time = 0;
  c0:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <time>
  c4:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <time+0x1>
  c8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <time+0x2>
  cc:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <time+0x3>
	// Initializing counters
	time_period = MAX_TICKS; // 64kHz
  d0:	89 ef       	ldi	r24, 0xF9	; 249
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <time_period+0x1>
  d8:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <time_period>
	duty_cycle = 0;
  dc:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <duty_cycle+0x1>
  e0:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <duty_cycle>
	
	// Setup Timer1
	OCR1A = time_period;				// Set the compare reg A
  e4:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <time_period>
  e8:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <time_period+0x1>
  ec:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  f0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = duty_cycle;					// Set the compare reg B
  f4:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <duty_cycle>
  f8:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <duty_cycle+0x1>
  fc:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 100:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	TCCR1A |= (1<<WGM11) | (1<<WGM10);	// turn on Fast PWM mode
 104:	a0 e8       	ldi	r26, 0x80	; 128
 106:	b0 e0       	ldi	r27, 0x00	; 0
 108:	8c 91       	ld	r24, X
 10a:	83 60       	ori	r24, 0x03	; 3
 10c:	8c 93       	st	X, r24
	TCCR1B |= (1<<WGM13) | (1<<WGM12);	// turn on Fast PWM mode
 10e:	e1 e8       	ldi	r30, 0x81	; 129
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	88 61       	ori	r24, 0x18	; 24
 116:	80 83       	st	Z, r24
	TCCR1A |= (1<<COM1B1);				// Set OC1B pin (PB2) to clear on compare match
 118:	8c 91       	ld	r24, X
 11a:	80 62       	ori	r24, 0x20	; 32
 11c:	8c 93       	st	X, r24
	TIMSK1 |= (1<<OCIE1A);				// turn on Timer1 Compare Match A ISR
 11e:	af e6       	ldi	r26, 0x6F	; 111
 120:	b0 e0       	ldi	r27, 0x00	; 0
 122:	8c 91       	ld	r24, X
 124:	82 60       	ori	r24, 0x02	; 2
 126:	8c 93       	st	X, r24
	TCCR1B |= (1<<CS10);				// Set prescalar = 1
 128:	80 81       	ld	r24, Z
 12a:	81 60       	ori	r24, 0x01	; 1
 12c:	80 83       	st	Z, r24
	
	// Setup Timer0
	OCR0A = 249;					//  1 Millisecond is 249 ticks
 12e:	89 ef       	ldi	r24, 0xF9	; 249
 130:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);			// turn on Timer0 Compare match ISR
 132:	ee e6       	ldi	r30, 0x6E	; 110
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	82 60       	ori	r24, 0x02	; 2
 13a:	80 83       	st	Z, r24
	TCCR0A |= (1<<WGM01);			// turn on clear-on-match, CTC mode
 13c:	84 b5       	in	r24, 0x24	; 36
 13e:	82 60       	ori	r24, 0x02	; 2
 140:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1<<CS00) | (1<<CS01); // Set pre-scalar to divide by 64
 142:	83 e0       	ldi	r24, 0x03	; 3
 144:	85 bd       	out	0x25, r24	; 37
 146:	08 95       	ret

00000148 <__vector_11>:
}

// Timer 1 Compare Match A ISR (TCNT1 = OCR1A)
ISR (TIMER1_COMPA_vect)
{
 148:	1f 92       	push	r1
 14a:	0f 92       	push	r0
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	0f 92       	push	r0
 150:	11 24       	eor	r1, r1
 152:	8f 93       	push	r24
 154:	9f 93       	push	r25
	// Load new Time period
	OCR1A = time_period;
 156:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <time_period>
 15a:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <time_period+0x1>
 15e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 162:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	// Load new duty cycle
	OCR1B = duty_cycle;
 166:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <duty_cycle>
 16a:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <duty_cycle+0x1>
 16e:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 172:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
}
 176:	9f 91       	pop	r25
 178:	8f 91       	pop	r24
 17a:	0f 90       	pop	r0
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	0f 90       	pop	r0
 180:	1f 90       	pop	r1
 182:	18 95       	reti

00000184 <__vector_14>:

ISR(TIMER0_COMPA_vect)
{
 184:	1f 92       	push	r1
 186:	0f 92       	push	r0
 188:	0f b6       	in	r0, 0x3f	; 63
 18a:	0f 92       	push	r0
 18c:	11 24       	eor	r1, r1
 18e:	2f 93       	push	r18
 190:	3f 93       	push	r19
 192:	4f 93       	push	r20
 194:	5f 93       	push	r21
 196:	6f 93       	push	r22
 198:	7f 93       	push	r23
 19a:	8f 93       	push	r24
 19c:	9f 93       	push	r25
 19e:	af 93       	push	r26
 1a0:	bf 93       	push	r27
 1a2:	ef 93       	push	r30
 1a4:	ff 93       	push	r31
	time++;
 1a6:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <time>
 1aa:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <time+0x1>
 1ae:	a0 91 07 01 	lds	r26, 0x0107	; 0x800107 <time+0x2>
 1b2:	b0 91 08 01 	lds	r27, 0x0108	; 0x800108 <time+0x3>
 1b6:	01 96       	adiw	r24, 0x01	; 1
 1b8:	a1 1d       	adc	r26, r1
 1ba:	b1 1d       	adc	r27, r1
 1bc:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <time>
 1c0:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <time+0x1>
 1c4:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <time+0x2>
 1c8:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <time+0x3>
	a = time*0.001;		//convert to actual time in ms
 1cc:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <time>
 1d0:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <time+0x1>
 1d4:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <time+0x2>
 1d8:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <time+0x3>
 1dc:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <__floatsisf>
 1e0:	2f e6       	ldi	r18, 0x6F	; 111
 1e2:	32 e1       	ldi	r19, 0x12	; 18
 1e4:	43 e8       	ldi	r20, 0x83	; 131
 1e6:	5a e3       	ldi	r21, 0x3A	; 58
 1e8:	0e 94 be 01 	call	0x37c	; 0x37c <__mulsf3>
 1ec:	60 93 09 01 	sts	0x0109, r22	; 0x800109 <a>
 1f0:	70 93 0a 01 	sts	0x010A, r23	; 0x80010a <a+0x1>
 1f4:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <a+0x2>
 1f8:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <a+0x3>
	duty_cycle = sin(2*M_PI*62.5*(a));
 1fc:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <a>
 200:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <a+0x1>
 204:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <a+0x2>
 208:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <a+0x3>
 20c:	2c e7       	ldi	r18, 0x7C	; 124
 20e:	39 e5       	ldi	r19, 0x59	; 89
 210:	44 ec       	ldi	r20, 0xC4	; 196
 212:	53 e4       	ldi	r21, 0x43	; 67
 214:	0e 94 be 01 	call	0x37c	; 0x37c <__mulsf3>
 218:	0e 94 2b 02 	call	0x456	; 0x456 <sin>
 21c:	0e 94 29 01 	call	0x252	; 0x252 <__fixunssfsi>
 220:	70 93 0e 01 	sts	0x010E, r23	; 0x80010e <duty_cycle+0x1>
 224:	60 93 0d 01 	sts	0x010D, r22	; 0x80010d <duty_cycle>
}
 228:	ff 91       	pop	r31
 22a:	ef 91       	pop	r30
 22c:	bf 91       	pop	r27
 22e:	af 91       	pop	r26
 230:	9f 91       	pop	r25
 232:	8f 91       	pop	r24
 234:	7f 91       	pop	r23
 236:	6f 91       	pop	r22
 238:	5f 91       	pop	r21
 23a:	4f 91       	pop	r20
 23c:	3f 91       	pop	r19
 23e:	2f 91       	pop	r18
 240:	0f 90       	pop	r0
 242:	0f be       	out	0x3f, r0	; 63
 244:	0f 90       	pop	r0
 246:	1f 90       	pop	r1
 248:	18 95       	reti

0000024a <main>:

int main(void)
{
	initialize_all();
 24a:	0e 94 57 00 	call	0xae	; 0xae <initialize_all>
	sei(); // Enable global interrupts
 24e:	78 94       	sei
	
	while (1)
	{
		// Nothing to do.
	}
 250:	ff cf       	rjmp	.-2      	; 0x250 <main+0x6>

00000252 <__fixunssfsi>:
 252:	0e 94 9d 01 	call	0x33a	; 0x33a <__fp_splitA>
 256:	88 f0       	brcs	.+34     	; 0x27a <__fixunssfsi+0x28>
 258:	9f 57       	subi	r25, 0x7F	; 127
 25a:	98 f0       	brcs	.+38     	; 0x282 <__fixunssfsi+0x30>
 25c:	b9 2f       	mov	r27, r25
 25e:	99 27       	eor	r25, r25
 260:	b7 51       	subi	r27, 0x17	; 23
 262:	b0 f0       	brcs	.+44     	; 0x290 <__fixunssfsi+0x3e>
 264:	e1 f0       	breq	.+56     	; 0x29e <__fixunssfsi+0x4c>
 266:	66 0f       	add	r22, r22
 268:	77 1f       	adc	r23, r23
 26a:	88 1f       	adc	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	1a f0       	brmi	.+6      	; 0x276 <__fixunssfsi+0x24>
 270:	ba 95       	dec	r27
 272:	c9 f7       	brne	.-14     	; 0x266 <__fixunssfsi+0x14>
 274:	14 c0       	rjmp	.+40     	; 0x29e <__fixunssfsi+0x4c>
 276:	b1 30       	cpi	r27, 0x01	; 1
 278:	91 f0       	breq	.+36     	; 0x29e <__fixunssfsi+0x4c>
 27a:	0e 94 b7 01 	call	0x36e	; 0x36e <__fp_zero>
 27e:	b1 e0       	ldi	r27, 0x01	; 1
 280:	08 95       	ret
 282:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_zero>
 286:	67 2f       	mov	r22, r23
 288:	78 2f       	mov	r23, r24
 28a:	88 27       	eor	r24, r24
 28c:	b8 5f       	subi	r27, 0xF8	; 248
 28e:	39 f0       	breq	.+14     	; 0x29e <__fixunssfsi+0x4c>
 290:	b9 3f       	cpi	r27, 0xF9	; 249
 292:	cc f3       	brlt	.-14     	; 0x286 <__fixunssfsi+0x34>
 294:	86 95       	lsr	r24
 296:	77 95       	ror	r23
 298:	67 95       	ror	r22
 29a:	b3 95       	inc	r27
 29c:	d9 f7       	brne	.-10     	; 0x294 <__fixunssfsi+0x42>
 29e:	3e f4       	brtc	.+14     	; 0x2ae <__fixunssfsi+0x5c>
 2a0:	90 95       	com	r25
 2a2:	80 95       	com	r24
 2a4:	70 95       	com	r23
 2a6:	61 95       	neg	r22
 2a8:	7f 4f       	sbci	r23, 0xFF	; 255
 2aa:	8f 4f       	sbci	r24, 0xFF	; 255
 2ac:	9f 4f       	sbci	r25, 0xFF	; 255
 2ae:	08 95       	ret

000002b0 <__floatunsisf>:
 2b0:	e8 94       	clt
 2b2:	09 c0       	rjmp	.+18     	; 0x2c6 <__floatsisf+0x12>

000002b4 <__floatsisf>:
 2b4:	97 fb       	bst	r25, 7
 2b6:	3e f4       	brtc	.+14     	; 0x2c6 <__floatsisf+0x12>
 2b8:	90 95       	com	r25
 2ba:	80 95       	com	r24
 2bc:	70 95       	com	r23
 2be:	61 95       	neg	r22
 2c0:	7f 4f       	sbci	r23, 0xFF	; 255
 2c2:	8f 4f       	sbci	r24, 0xFF	; 255
 2c4:	9f 4f       	sbci	r25, 0xFF	; 255
 2c6:	99 23       	and	r25, r25
 2c8:	a9 f0       	breq	.+42     	; 0x2f4 <__floatsisf+0x40>
 2ca:	f9 2f       	mov	r31, r25
 2cc:	96 e9       	ldi	r25, 0x96	; 150
 2ce:	bb 27       	eor	r27, r27
 2d0:	93 95       	inc	r25
 2d2:	f6 95       	lsr	r31
 2d4:	87 95       	ror	r24
 2d6:	77 95       	ror	r23
 2d8:	67 95       	ror	r22
 2da:	b7 95       	ror	r27
 2dc:	f1 11       	cpse	r31, r1
 2de:	f8 cf       	rjmp	.-16     	; 0x2d0 <__floatsisf+0x1c>
 2e0:	fa f4       	brpl	.+62     	; 0x320 <__floatsisf+0x6c>
 2e2:	bb 0f       	add	r27, r27
 2e4:	11 f4       	brne	.+4      	; 0x2ea <__floatsisf+0x36>
 2e6:	60 ff       	sbrs	r22, 0
 2e8:	1b c0       	rjmp	.+54     	; 0x320 <__floatsisf+0x6c>
 2ea:	6f 5f       	subi	r22, 0xFF	; 255
 2ec:	7f 4f       	sbci	r23, 0xFF	; 255
 2ee:	8f 4f       	sbci	r24, 0xFF	; 255
 2f0:	9f 4f       	sbci	r25, 0xFF	; 255
 2f2:	16 c0       	rjmp	.+44     	; 0x320 <__floatsisf+0x6c>
 2f4:	88 23       	and	r24, r24
 2f6:	11 f0       	breq	.+4      	; 0x2fc <__floatsisf+0x48>
 2f8:	96 e9       	ldi	r25, 0x96	; 150
 2fa:	11 c0       	rjmp	.+34     	; 0x31e <__floatsisf+0x6a>
 2fc:	77 23       	and	r23, r23
 2fe:	21 f0       	breq	.+8      	; 0x308 <__floatsisf+0x54>
 300:	9e e8       	ldi	r25, 0x8E	; 142
 302:	87 2f       	mov	r24, r23
 304:	76 2f       	mov	r23, r22
 306:	05 c0       	rjmp	.+10     	; 0x312 <__floatsisf+0x5e>
 308:	66 23       	and	r22, r22
 30a:	71 f0       	breq	.+28     	; 0x328 <__floatsisf+0x74>
 30c:	96 e8       	ldi	r25, 0x86	; 134
 30e:	86 2f       	mov	r24, r22
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	2a f0       	brmi	.+10     	; 0x320 <__floatsisf+0x6c>
 316:	9a 95       	dec	r25
 318:	66 0f       	add	r22, r22
 31a:	77 1f       	adc	r23, r23
 31c:	88 1f       	adc	r24, r24
 31e:	da f7       	brpl	.-10     	; 0x316 <__floatsisf+0x62>
 320:	88 0f       	add	r24, r24
 322:	96 95       	lsr	r25
 324:	87 95       	ror	r24
 326:	97 f9       	bld	r25, 7
 328:	08 95       	ret

0000032a <__fp_split3>:
 32a:	57 fd       	sbrc	r21, 7
 32c:	90 58       	subi	r25, 0x80	; 128
 32e:	44 0f       	add	r20, r20
 330:	55 1f       	adc	r21, r21
 332:	59 f0       	breq	.+22     	; 0x34a <__fp_splitA+0x10>
 334:	5f 3f       	cpi	r21, 0xFF	; 255
 336:	71 f0       	breq	.+28     	; 0x354 <__fp_splitA+0x1a>
 338:	47 95       	ror	r20

0000033a <__fp_splitA>:
 33a:	88 0f       	add	r24, r24
 33c:	97 fb       	bst	r25, 7
 33e:	99 1f       	adc	r25, r25
 340:	61 f0       	breq	.+24     	; 0x35a <__fp_splitA+0x20>
 342:	9f 3f       	cpi	r25, 0xFF	; 255
 344:	79 f0       	breq	.+30     	; 0x364 <__fp_splitA+0x2a>
 346:	87 95       	ror	r24
 348:	08 95       	ret
 34a:	12 16       	cp	r1, r18
 34c:	13 06       	cpc	r1, r19
 34e:	14 06       	cpc	r1, r20
 350:	55 1f       	adc	r21, r21
 352:	f2 cf       	rjmp	.-28     	; 0x338 <__fp_split3+0xe>
 354:	46 95       	lsr	r20
 356:	f1 df       	rcall	.-30     	; 0x33a <__fp_splitA>
 358:	08 c0       	rjmp	.+16     	; 0x36a <__fp_splitA+0x30>
 35a:	16 16       	cp	r1, r22
 35c:	17 06       	cpc	r1, r23
 35e:	18 06       	cpc	r1, r24
 360:	99 1f       	adc	r25, r25
 362:	f1 cf       	rjmp	.-30     	; 0x346 <__fp_splitA+0xc>
 364:	86 95       	lsr	r24
 366:	71 05       	cpc	r23, r1
 368:	61 05       	cpc	r22, r1
 36a:	08 94       	sec
 36c:	08 95       	ret

0000036e <__fp_zero>:
 36e:	e8 94       	clt

00000370 <__fp_szero>:
 370:	bb 27       	eor	r27, r27
 372:	66 27       	eor	r22, r22
 374:	77 27       	eor	r23, r23
 376:	cb 01       	movw	r24, r22
 378:	97 f9       	bld	r25, 7
 37a:	08 95       	ret

0000037c <__mulsf3>:
 37c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__mulsf3x>
 380:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__fp_round>
 384:	0e 94 3c 02 	call	0x478	; 0x478 <__fp_pscA>
 388:	38 f0       	brcs	.+14     	; 0x398 <__mulsf3+0x1c>
 38a:	0e 94 43 02 	call	0x486	; 0x486 <__fp_pscB>
 38e:	20 f0       	brcs	.+8      	; 0x398 <__mulsf3+0x1c>
 390:	95 23       	and	r25, r21
 392:	11 f0       	breq	.+4      	; 0x398 <__mulsf3+0x1c>
 394:	0c 94 33 02 	jmp	0x466	; 0x466 <__fp_inf>
 398:	0c 94 39 02 	jmp	0x472	; 0x472 <__fp_nan>
 39c:	11 24       	eor	r1, r1
 39e:	0c 94 b8 01 	jmp	0x370	; 0x370 <__fp_szero>

000003a2 <__mulsf3x>:
 3a2:	0e 94 95 01 	call	0x32a	; 0x32a <__fp_split3>
 3a6:	70 f3       	brcs	.-36     	; 0x384 <__mulsf3+0x8>

000003a8 <__mulsf3_pse>:
 3a8:	95 9f       	mul	r25, r21
 3aa:	c1 f3       	breq	.-16     	; 0x39c <__mulsf3+0x20>
 3ac:	95 0f       	add	r25, r21
 3ae:	50 e0       	ldi	r21, 0x00	; 0
 3b0:	55 1f       	adc	r21, r21
 3b2:	62 9f       	mul	r22, r18
 3b4:	f0 01       	movw	r30, r0
 3b6:	72 9f       	mul	r23, r18
 3b8:	bb 27       	eor	r27, r27
 3ba:	f0 0d       	add	r31, r0
 3bc:	b1 1d       	adc	r27, r1
 3be:	63 9f       	mul	r22, r19
 3c0:	aa 27       	eor	r26, r26
 3c2:	f0 0d       	add	r31, r0
 3c4:	b1 1d       	adc	r27, r1
 3c6:	aa 1f       	adc	r26, r26
 3c8:	64 9f       	mul	r22, r20
 3ca:	66 27       	eor	r22, r22
 3cc:	b0 0d       	add	r27, r0
 3ce:	a1 1d       	adc	r26, r1
 3d0:	66 1f       	adc	r22, r22
 3d2:	82 9f       	mul	r24, r18
 3d4:	22 27       	eor	r18, r18
 3d6:	b0 0d       	add	r27, r0
 3d8:	a1 1d       	adc	r26, r1
 3da:	62 1f       	adc	r22, r18
 3dc:	73 9f       	mul	r23, r19
 3de:	b0 0d       	add	r27, r0
 3e0:	a1 1d       	adc	r26, r1
 3e2:	62 1f       	adc	r22, r18
 3e4:	83 9f       	mul	r24, r19
 3e6:	a0 0d       	add	r26, r0
 3e8:	61 1d       	adc	r22, r1
 3ea:	22 1f       	adc	r18, r18
 3ec:	74 9f       	mul	r23, r20
 3ee:	33 27       	eor	r19, r19
 3f0:	a0 0d       	add	r26, r0
 3f2:	61 1d       	adc	r22, r1
 3f4:	23 1f       	adc	r18, r19
 3f6:	84 9f       	mul	r24, r20
 3f8:	60 0d       	add	r22, r0
 3fa:	21 1d       	adc	r18, r1
 3fc:	82 2f       	mov	r24, r18
 3fe:	76 2f       	mov	r23, r22
 400:	6a 2f       	mov	r22, r26
 402:	11 24       	eor	r1, r1
 404:	9f 57       	subi	r25, 0x7F	; 127
 406:	50 40       	sbci	r21, 0x00	; 0
 408:	9a f0       	brmi	.+38     	; 0x430 <__FUSE_REGION_LENGTH__+0x30>
 40a:	f1 f0       	breq	.+60     	; 0x448 <__FUSE_REGION_LENGTH__+0x48>
 40c:	88 23       	and	r24, r24
 40e:	4a f0       	brmi	.+18     	; 0x422 <__FUSE_REGION_LENGTH__+0x22>
 410:	ee 0f       	add	r30, r30
 412:	ff 1f       	adc	r31, r31
 414:	bb 1f       	adc	r27, r27
 416:	66 1f       	adc	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	88 1f       	adc	r24, r24
 41c:	91 50       	subi	r25, 0x01	; 1
 41e:	50 40       	sbci	r21, 0x00	; 0
 420:	a9 f7       	brne	.-22     	; 0x40c <__FUSE_REGION_LENGTH__+0xc>
 422:	9e 3f       	cpi	r25, 0xFE	; 254
 424:	51 05       	cpc	r21, r1
 426:	80 f0       	brcs	.+32     	; 0x448 <__FUSE_REGION_LENGTH__+0x48>
 428:	0c 94 33 02 	jmp	0x466	; 0x466 <__fp_inf>
 42c:	0c 94 b8 01 	jmp	0x370	; 0x370 <__fp_szero>
 430:	5f 3f       	cpi	r21, 0xFF	; 255
 432:	e4 f3       	brlt	.-8      	; 0x42c <__FUSE_REGION_LENGTH__+0x2c>
 434:	98 3e       	cpi	r25, 0xE8	; 232
 436:	d4 f3       	brlt	.-12     	; 0x42c <__FUSE_REGION_LENGTH__+0x2c>
 438:	86 95       	lsr	r24
 43a:	77 95       	ror	r23
 43c:	67 95       	ror	r22
 43e:	b7 95       	ror	r27
 440:	f7 95       	ror	r31
 442:	e7 95       	ror	r30
 444:	9f 5f       	subi	r25, 0xFF	; 255
 446:	c1 f7       	brne	.-16     	; 0x438 <__FUSE_REGION_LENGTH__+0x38>
 448:	fe 2b       	or	r31, r30
 44a:	88 0f       	add	r24, r24
 44c:	91 1d       	adc	r25, r1
 44e:	96 95       	lsr	r25
 450:	87 95       	ror	r24
 452:	97 f9       	bld	r25, 7
 454:	08 95       	ret

00000456 <sin>:
 456:	9f 93       	push	r25
 458:	0e 94 4c 02 	call	0x498	; 0x498 <__fp_rempio2>
 45c:	0f 90       	pop	r0
 45e:	07 fc       	sbrc	r0, 7
 460:	ee 5f       	subi	r30, 0xFE	; 254
 462:	0c 94 86 02 	jmp	0x50c	; 0x50c <__fp_sinus>

00000466 <__fp_inf>:
 466:	97 f9       	bld	r25, 7
 468:	9f 67       	ori	r25, 0x7F	; 127
 46a:	80 e8       	ldi	r24, 0x80	; 128
 46c:	70 e0       	ldi	r23, 0x00	; 0
 46e:	60 e0       	ldi	r22, 0x00	; 0
 470:	08 95       	ret

00000472 <__fp_nan>:
 472:	9f ef       	ldi	r25, 0xFF	; 255
 474:	80 ec       	ldi	r24, 0xC0	; 192
 476:	08 95       	ret

00000478 <__fp_pscA>:
 478:	00 24       	eor	r0, r0
 47a:	0a 94       	dec	r0
 47c:	16 16       	cp	r1, r22
 47e:	17 06       	cpc	r1, r23
 480:	18 06       	cpc	r1, r24
 482:	09 06       	cpc	r0, r25
 484:	08 95       	ret

00000486 <__fp_pscB>:
 486:	00 24       	eor	r0, r0
 488:	0a 94       	dec	r0
 48a:	12 16       	cp	r1, r18
 48c:	13 06       	cpc	r1, r19
 48e:	14 06       	cpc	r1, r20
 490:	05 06       	cpc	r0, r21
 492:	08 95       	ret
 494:	0c 94 39 02 	jmp	0x472	; 0x472 <__fp_nan>

00000498 <__fp_rempio2>:
 498:	0e 94 9d 01 	call	0x33a	; 0x33a <__fp_splitA>
 49c:	d8 f3       	brcs	.-10     	; 0x494 <__fp_pscB+0xe>
 49e:	e8 94       	clt
 4a0:	e0 e0       	ldi	r30, 0x00	; 0
 4a2:	bb 27       	eor	r27, r27
 4a4:	9f 57       	subi	r25, 0x7F	; 127
 4a6:	f0 f0       	brcs	.+60     	; 0x4e4 <__fp_rempio2+0x4c>
 4a8:	2a ed       	ldi	r18, 0xDA	; 218
 4aa:	3f e0       	ldi	r19, 0x0F	; 15
 4ac:	49 ec       	ldi	r20, 0xC9	; 201
 4ae:	06 c0       	rjmp	.+12     	; 0x4bc <__fp_rempio2+0x24>
 4b0:	ee 0f       	add	r30, r30
 4b2:	bb 0f       	add	r27, r27
 4b4:	66 1f       	adc	r22, r22
 4b6:	77 1f       	adc	r23, r23
 4b8:	88 1f       	adc	r24, r24
 4ba:	28 f0       	brcs	.+10     	; 0x4c6 <__fp_rempio2+0x2e>
 4bc:	b2 3a       	cpi	r27, 0xA2	; 162
 4be:	62 07       	cpc	r22, r18
 4c0:	73 07       	cpc	r23, r19
 4c2:	84 07       	cpc	r24, r20
 4c4:	28 f0       	brcs	.+10     	; 0x4d0 <__fp_rempio2+0x38>
 4c6:	b2 5a       	subi	r27, 0xA2	; 162
 4c8:	62 0b       	sbc	r22, r18
 4ca:	73 0b       	sbc	r23, r19
 4cc:	84 0b       	sbc	r24, r20
 4ce:	e3 95       	inc	r30
 4d0:	9a 95       	dec	r25
 4d2:	72 f7       	brpl	.-36     	; 0x4b0 <__fp_rempio2+0x18>
 4d4:	80 38       	cpi	r24, 0x80	; 128
 4d6:	30 f4       	brcc	.+12     	; 0x4e4 <__fp_rempio2+0x4c>
 4d8:	9a 95       	dec	r25
 4da:	bb 0f       	add	r27, r27
 4dc:	66 1f       	adc	r22, r22
 4de:	77 1f       	adc	r23, r23
 4e0:	88 1f       	adc	r24, r24
 4e2:	d2 f7       	brpl	.-12     	; 0x4d8 <__fp_rempio2+0x40>
 4e4:	90 48       	sbci	r25, 0x80	; 128
 4e6:	0c 94 02 03 	jmp	0x604	; 0x604 <__fp_mpack_finite>

000004ea <__fp_round>:
 4ea:	09 2e       	mov	r0, r25
 4ec:	03 94       	inc	r0
 4ee:	00 0c       	add	r0, r0
 4f0:	11 f4       	brne	.+4      	; 0x4f6 <__fp_round+0xc>
 4f2:	88 23       	and	r24, r24
 4f4:	52 f0       	brmi	.+20     	; 0x50a <__fp_round+0x20>
 4f6:	bb 0f       	add	r27, r27
 4f8:	40 f4       	brcc	.+16     	; 0x50a <__fp_round+0x20>
 4fa:	bf 2b       	or	r27, r31
 4fc:	11 f4       	brne	.+4      	; 0x502 <__fp_round+0x18>
 4fe:	60 ff       	sbrs	r22, 0
 500:	04 c0       	rjmp	.+8      	; 0x50a <__fp_round+0x20>
 502:	6f 5f       	subi	r22, 0xFF	; 255
 504:	7f 4f       	sbci	r23, 0xFF	; 255
 506:	8f 4f       	sbci	r24, 0xFF	; 255
 508:	9f 4f       	sbci	r25, 0xFF	; 255
 50a:	08 95       	ret

0000050c <__fp_sinus>:
 50c:	ef 93       	push	r30
 50e:	e0 ff       	sbrs	r30, 0
 510:	07 c0       	rjmp	.+14     	; 0x520 <__fp_sinus+0x14>
 512:	a2 ea       	ldi	r26, 0xA2	; 162
 514:	2a ed       	ldi	r18, 0xDA	; 218
 516:	3f e0       	ldi	r19, 0x0F	; 15
 518:	49 ec       	ldi	r20, 0xC9	; 201
 51a:	5f eb       	ldi	r21, 0xBF	; 191
 51c:	0e 94 ab 02 	call	0x556	; 0x556 <__addsf3x>
 520:	0e 94 75 02 	call	0x4ea	; 0x4ea <__fp_round>
 524:	0f 90       	pop	r0
 526:	03 94       	inc	r0
 528:	01 fc       	sbrc	r0, 1
 52a:	90 58       	subi	r25, 0x80	; 128
 52c:	e8 e6       	ldi	r30, 0x68	; 104
 52e:	f0 e0       	ldi	r31, 0x00	; 0
 530:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_powsodd>
 534:	0e 94 3c 02 	call	0x478	; 0x478 <__fp_pscA>
 538:	38 f0       	brcs	.+14     	; 0x548 <__fp_sinus+0x3c>
 53a:	0e 94 43 02 	call	0x486	; 0x486 <__fp_pscB>
 53e:	20 f0       	brcs	.+8      	; 0x548 <__fp_sinus+0x3c>
 540:	39 f4       	brne	.+14     	; 0x550 <__fp_sinus+0x44>
 542:	9f 3f       	cpi	r25, 0xFF	; 255
 544:	19 f4       	brne	.+6      	; 0x54c <__fp_sinus+0x40>
 546:	26 f4       	brtc	.+8      	; 0x550 <__fp_sinus+0x44>
 548:	0c 94 39 02 	jmp	0x472	; 0x472 <__fp_nan>
 54c:	0e f4       	brtc	.+2      	; 0x550 <__fp_sinus+0x44>
 54e:	e0 95       	com	r30
 550:	e7 fb       	bst	r30, 7
 552:	0c 94 33 02 	jmp	0x466	; 0x466 <__fp_inf>

00000556 <__addsf3x>:
 556:	e9 2f       	mov	r30, r25
 558:	0e 94 95 01 	call	0x32a	; 0x32a <__fp_split3>
 55c:	58 f3       	brcs	.-42     	; 0x534 <__fp_sinus+0x28>
 55e:	ba 17       	cp	r27, r26
 560:	62 07       	cpc	r22, r18
 562:	73 07       	cpc	r23, r19
 564:	84 07       	cpc	r24, r20
 566:	95 07       	cpc	r25, r21
 568:	20 f0       	brcs	.+8      	; 0x572 <__addsf3x+0x1c>
 56a:	79 f4       	brne	.+30     	; 0x58a <__addsf3x+0x34>
 56c:	a6 f5       	brtc	.+104    	; 0x5d6 <__addsf3x+0x80>
 56e:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_zero>
 572:	0e f4       	brtc	.+2      	; 0x576 <__addsf3x+0x20>
 574:	e0 95       	com	r30
 576:	0b 2e       	mov	r0, r27
 578:	ba 2f       	mov	r27, r26
 57a:	a0 2d       	mov	r26, r0
 57c:	0b 01       	movw	r0, r22
 57e:	b9 01       	movw	r22, r18
 580:	90 01       	movw	r18, r0
 582:	0c 01       	movw	r0, r24
 584:	ca 01       	movw	r24, r20
 586:	a0 01       	movw	r20, r0
 588:	11 24       	eor	r1, r1
 58a:	ff 27       	eor	r31, r31
 58c:	59 1b       	sub	r21, r25
 58e:	99 f0       	breq	.+38     	; 0x5b6 <__addsf3x+0x60>
 590:	59 3f       	cpi	r21, 0xF9	; 249
 592:	50 f4       	brcc	.+20     	; 0x5a8 <__addsf3x+0x52>
 594:	50 3e       	cpi	r21, 0xE0	; 224
 596:	68 f1       	brcs	.+90     	; 0x5f2 <__addsf3x+0x9c>
 598:	1a 16       	cp	r1, r26
 59a:	f0 40       	sbci	r31, 0x00	; 0
 59c:	a2 2f       	mov	r26, r18
 59e:	23 2f       	mov	r18, r19
 5a0:	34 2f       	mov	r19, r20
 5a2:	44 27       	eor	r20, r20
 5a4:	58 5f       	subi	r21, 0xF8	; 248
 5a6:	f3 cf       	rjmp	.-26     	; 0x58e <__addsf3x+0x38>
 5a8:	46 95       	lsr	r20
 5aa:	37 95       	ror	r19
 5ac:	27 95       	ror	r18
 5ae:	a7 95       	ror	r26
 5b0:	f0 40       	sbci	r31, 0x00	; 0
 5b2:	53 95       	inc	r21
 5b4:	c9 f7       	brne	.-14     	; 0x5a8 <__addsf3x+0x52>
 5b6:	7e f4       	brtc	.+30     	; 0x5d6 <__addsf3x+0x80>
 5b8:	1f 16       	cp	r1, r31
 5ba:	ba 0b       	sbc	r27, r26
 5bc:	62 0b       	sbc	r22, r18
 5be:	73 0b       	sbc	r23, r19
 5c0:	84 0b       	sbc	r24, r20
 5c2:	ba f0       	brmi	.+46     	; 0x5f2 <__addsf3x+0x9c>
 5c4:	91 50       	subi	r25, 0x01	; 1
 5c6:	a1 f0       	breq	.+40     	; 0x5f0 <__addsf3x+0x9a>
 5c8:	ff 0f       	add	r31, r31
 5ca:	bb 1f       	adc	r27, r27
 5cc:	66 1f       	adc	r22, r22
 5ce:	77 1f       	adc	r23, r23
 5d0:	88 1f       	adc	r24, r24
 5d2:	c2 f7       	brpl	.-16     	; 0x5c4 <__addsf3x+0x6e>
 5d4:	0e c0       	rjmp	.+28     	; 0x5f2 <__addsf3x+0x9c>
 5d6:	ba 0f       	add	r27, r26
 5d8:	62 1f       	adc	r22, r18
 5da:	73 1f       	adc	r23, r19
 5dc:	84 1f       	adc	r24, r20
 5de:	48 f4       	brcc	.+18     	; 0x5f2 <__addsf3x+0x9c>
 5e0:	87 95       	ror	r24
 5e2:	77 95       	ror	r23
 5e4:	67 95       	ror	r22
 5e6:	b7 95       	ror	r27
 5e8:	f7 95       	ror	r31
 5ea:	9e 3f       	cpi	r25, 0xFE	; 254
 5ec:	08 f0       	brcs	.+2      	; 0x5f0 <__addsf3x+0x9a>
 5ee:	b0 cf       	rjmp	.-160    	; 0x550 <__fp_sinus+0x44>
 5f0:	93 95       	inc	r25
 5f2:	88 0f       	add	r24, r24
 5f4:	08 f0       	brcs	.+2      	; 0x5f8 <__addsf3x+0xa2>
 5f6:	99 27       	eor	r25, r25
 5f8:	ee 0f       	add	r30, r30
 5fa:	97 95       	ror	r25
 5fc:	87 95       	ror	r24
 5fe:	08 95       	ret

00000600 <__fp_mpack>:
 600:	9f 3f       	cpi	r25, 0xFF	; 255
 602:	31 f0       	breq	.+12     	; 0x610 <__fp_mpack_finite+0xc>

00000604 <__fp_mpack_finite>:
 604:	91 50       	subi	r25, 0x01	; 1
 606:	20 f4       	brcc	.+8      	; 0x610 <__fp_mpack_finite+0xc>
 608:	87 95       	ror	r24
 60a:	77 95       	ror	r23
 60c:	67 95       	ror	r22
 60e:	b7 95       	ror	r27
 610:	88 0f       	add	r24, r24
 612:	91 1d       	adc	r25, r1
 614:	96 95       	lsr	r25
 616:	87 95       	ror	r24
 618:	97 f9       	bld	r25, 7
 61a:	08 95       	ret

0000061c <__fp_powsodd>:
 61c:	9f 93       	push	r25
 61e:	8f 93       	push	r24
 620:	7f 93       	push	r23
 622:	6f 93       	push	r22
 624:	ff 93       	push	r31
 626:	ef 93       	push	r30
 628:	9b 01       	movw	r18, r22
 62a:	ac 01       	movw	r20, r24
 62c:	0e 94 be 01 	call	0x37c	; 0x37c <__mulsf3>
 630:	ef 91       	pop	r30
 632:	ff 91       	pop	r31
 634:	0e 94 22 03 	call	0x644	; 0x644 <__fp_powser>
 638:	2f 91       	pop	r18
 63a:	3f 91       	pop	r19
 63c:	4f 91       	pop	r20
 63e:	5f 91       	pop	r21
 640:	0c 94 be 01 	jmp	0x37c	; 0x37c <__mulsf3>

00000644 <__fp_powser>:
 644:	df 93       	push	r29
 646:	cf 93       	push	r28
 648:	1f 93       	push	r17
 64a:	0f 93       	push	r16
 64c:	ff 92       	push	r15
 64e:	ef 92       	push	r14
 650:	df 92       	push	r13
 652:	7b 01       	movw	r14, r22
 654:	8c 01       	movw	r16, r24
 656:	68 94       	set
 658:	06 c0       	rjmp	.+12     	; 0x666 <__fp_powser+0x22>
 65a:	da 2e       	mov	r13, r26
 65c:	ef 01       	movw	r28, r30
 65e:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__mulsf3x>
 662:	fe 01       	movw	r30, r28
 664:	e8 94       	clt
 666:	a5 91       	lpm	r26, Z+
 668:	25 91       	lpm	r18, Z+
 66a:	35 91       	lpm	r19, Z+
 66c:	45 91       	lpm	r20, Z+
 66e:	55 91       	lpm	r21, Z+
 670:	a6 f3       	brts	.-24     	; 0x65a <__fp_powser+0x16>
 672:	ef 01       	movw	r28, r30
 674:	0e 94 ab 02 	call	0x556	; 0x556 <__addsf3x>
 678:	fe 01       	movw	r30, r28
 67a:	97 01       	movw	r18, r14
 67c:	a8 01       	movw	r20, r16
 67e:	da 94       	dec	r13
 680:	69 f7       	brne	.-38     	; 0x65c <__fp_powser+0x18>
 682:	df 90       	pop	r13
 684:	ef 90       	pop	r14
 686:	ff 90       	pop	r15
 688:	0f 91       	pop	r16
 68a:	1f 91       	pop	r17
 68c:	cf 91       	pop	r28
 68e:	df 91       	pop	r29
 690:	08 95       	ret

00000692 <_exit>:
 692:	f8 94       	cli

00000694 <__stop_program>:
 694:	ff cf       	rjmp	.-2      	; 0x694 <__stop_program>
